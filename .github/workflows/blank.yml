# name: Save Docker Image as Artifact

# on: [push]

# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Log in to Docker Hub
#       run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

#     - name: Pull Docker image
#       run: docker pull envoyproxy/envoy-windows-ltsc2022-dev

#     - name: Save Docker image to file
#       run: docker save -o envoy-image.tar envoyproxy/envoy-windows-ltsc2022-dev

#     - name: Upload Docker image as artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: envoy-image
#         path: envoy-image.tar
name: Build Docker Image and Save as Artifact

on: [push]

jobs:
  build:
    runs-on: windows-2019

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker image
      run: docker build -t my-windows-image .

    - name: Save Docker image to file
      run: docker save -o my-windows-image.tar my-windows-image

    - name: Install 7-Zip
      run: choco install 7zip --no-progress

    - name: Compress Docker image with maximum compression
      run: 7z a -tzip -mx=9 my-windows-image.zip my-windows-image.tar

    - name: Output compressed file size
      run: |
        $size = (Get-Item my-windows-image.zip).Length / 1MB
        Write-Output "Compressed file size: $size MB"

    - name: Upload compressed Docker image as artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-windows-image
        path: my-windows-image.zip